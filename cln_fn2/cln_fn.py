#!/usr/bin/python

import os
import string

VALID = string.ascii_letters + string.digits + '_- .'
SUBST = {   "'": '',
            '!': '',
            '#': '_',
            '$': 'S',
            '%': '_',
            '&': '_',
            '(': '_',
            ')': '_',
            '+': '_',
            ',': ',',
            ':': '_',
            ';': '_',
            '=': '_',
            '@': '_',
            '[': '_',
            '\u2009': '',
            '\u200a': '',
            '\u200b': '',
            '\u200c': '',
            '\u200d': '',
            '\u202c': '',
            '\u65039': '',
            '\u9654': '',
            '\xa0': '',
            ']': '_',
            '`': '',
            'eÃÅ': 'e',
            '{': '_',
            '}': '_',
            '~': '-',
            '¬°': '_',
            '¬§': '_',
            '¬´': '_',
            '¬±': '_',
            '¬¥': '',
            '¬ª': '_',
            '√Ä': 'A',
            '√Ñ': 'AE',
            '√Ö': 'AA',
            '√Ü': 'AE',
            '√â': 'E',
            '√ñ': 'OE',
            '√ò': 'OE',
            '√ü': 'ss',
            '√†': 'a',
            '√°': 'a',
            '√£': 'a',
            '√§': 'ae',
            '√•': 'aa',
            '√¶': 'ae',
            '√ß': 'c',
            '√®': 'e',
            '√©': 'e',
            '√™': 'e',
            '√´': 'e',
            '—ë': 'e',
            '√≠': 'i',
            '√±': 'n',
            '√≥': 'o',
            '√∂': 'OE',
            '√∏': 'oe',
            '√º': 'u',
            'ƒõ': 'e',
            '≈°': 's',
            '»õ': 't',
            '–ê': 'A',  # Russian?
            '–ë': 'b',
            '–í': 'B',  # Russian?
            '–°': 'C',  # Russian?
            '–î': 'D',  # Russian?
            '–ï': 'E',  # Russian?
            '–õ': 'N',  # Russian?
            '–ò': 'N',  # Russian?
            '–ô': 'N',  # Russian
            '–ö': 'K',  # Russian?
            '–ú': 'M',
            '–ù': 'H',  # Russian?
            '–û': 'O',  # Russian?
            '–ü': 'N',
            '–†': 'P',  # Russian?
            '–ì': 'R',  # Russian?
            '–Ø': 'R',  # Russian?
            '–¢': 'T',
            '–ß': 'y',  # Russian?
            '–®': 'W',
            '–ñ': 'X',  # Russian?
            '–´': 'bl',  # Russian?
            '–∞': 'a',
            '—å': 'b',
            '–¨': 'b',
            '–≤': 'B',
            '–¥': 'D',
            '–±': 'd',
            '–µ': 'e',  # apparently not a normal e ...
            '–∑': '3',
            '–≠': '3',
            '—ç': '3',
            '–ó': '3',
            '–∏': 'n',
            '–π': 'n',
            '–∫': 'k',
            '–ª': 'r',
            '—é': 'h',
            '—è': 'R',
            '–º': 'M',
            '–Ω': 'H',
            '–æ': 'o',
            '–ø': 'n',
            '—Ä': 'p',
            '–≥': 'r',
            '—Å': 'c',
            '—Ç': 'T',
            '—É': 'y',
            '—Ñ': 'O',
            '—Ö': 'x',
            '–∂': 'X',
            '—Ü': 'y',
            '—á': 'y',
            '—à': 'w',
            '—ã': 'bl',
            '‚Äì': '-',  # apparently not a normal hyphen ...
            '‚Äî': '-',  # apparently not a normal hyphen ...
            '‚Äô': '',
            '‚Äú': '',
            '‚Äù': '',
            '‚Ä¶': '_',
            '‚Ñ¢': '',
            '‚ñ¨': '',
            '‚ñ≤': '',
            '‚ñ∂': '',
            '‚ñ∫': '',
            '‚ñº': '',
            '‚óÑ': '',
            '‚óà': '',
            '‚òÖ': '_',
            '‚ô•': '',
            '‚úÖ': '',
            '‚ù§': '',
            '‚û§': '',
            'Ô∏è': '',
            'üå∂': '',
            'üé©': '',
            'üêá': ''}

ROOT = "/home/output/.TMP/"  # "/media/veracrypt1"  # "/run/media/martin/SAMSUNG"   # /.TMP/NEWS_1"
ZONEY = "/home/output/.TMP/"  # "/media/veracrypt1"

print(f"Valid: {VALID}")
print(f"NoVal: {''.join(SUBST.keys())}")

set_invalids = set()
num_invalids = 0

for root, dirs, files in os.walk(ROOT):
    path = root.split(os.sep)
    # print((len(path) - 1) * '---', os.path.basename(root))
    for file in files:
        # print(len(path) * '---', file)
        if not all(c in VALID for c in file):  # If not a valid name
            lst_bad = sorted(list(set([c for c in file if c not in VALID])))
            lst_cnv = [ord(c) for c in lst_bad]
            set_invalids.update(lst_bad)
            num_invalids += 1
            if any(c not in SUBST.keys() for c in lst_bad):
                lst_real_bad = [c for c in lst_bad if c not in SUBST.keys()]
                print(f" Real Bad char(s) {lst_real_bad}: {[ord(c) for c in lst_real_bad]}: {root}{os.sep}{file}")
                for c in lst_real_bad:
                    SUBST[c] = '_'  # temporarily add this char, and a replace value
            # Make a swap
            if root.startswith(ZONEY):
                newf = file
                for key_s in SUBST.keys():
                    newf = newf.replace(key_s, SUBST[key_s])
                str_fno = root+os.sep+file
                str_fnn = root+os.sep+newf
                if str_fno !=str_fnn:
                    print(f"Renaming:\n< {str_fno}\n> {str_fnn}")
                    os.rename(str_fno, str_fnn)

print(f"num: {num_invalids}")
print(f"set: {sorted(list(set_invalids))}")
